package com.medixpress.commercial;

import com.medixpress.commercial.sqlite.DatabaseHelper;
import com.medixpress.commercial.sqlite.DemoDatabase;
import com.medixpress.commercial.sqlite.Vendor;
import com.medixpress.medixpress_commercial.R;

import android.os.Bundle;
import android.preference.PreferenceFragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.view.ViewPager;
import android.app.ActionBar;
import android.app.Activity;
import android.app.Fragment;
import android.app.FragmentManager;
import android.app.FragmentTransaction;
import android.app.ListFragment;
import android.app.SearchManager;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.View;
import android.view.ViewGroup;
import android.widget.SearchView;

public class MainActivity extends FragmentActivity {
	
	private static final String ACTION_SEARCH = 
			"android.intent.action.SEARCH";
	
	private Vendor vendor = null;
	private DatabaseHelper helper = null;
	
	private ViewPager viewPager = null;
	private TabsPagerAdapter tabsAdapter = null;
	
	BroadcastReceiver searchReceiver = new BroadcastReceiver() {
		@Override
		public void onReceive(Context context, Intent intent) {
			if (intent.getAction().equals(Intent.ACTION_SEARCH)) {
				doSearch(intent.getStringExtra(SearchManager.QUERY));
			}
		}
	};
	
	// 
	private void doSearch(String query) {
		PreferenceHelper.setCurrentSearch(query);
		
	}

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		
		// Set up PreferenceHelper
		PreferenceHelper.setContext(this);
		
		helper = new DatabaseHelper(this);
		DemoDatabase.createDemoDatabase(helper);
		
		Intent intent = getIntent();
		vendor = helper.getVendor(intent.getLongExtra("VENDORID", 0));
		
		// Initilization
        viewPager = (ViewPager) findViewById(R.id.pager);
        final ActionBar actionBar = getActionBar();
        tabsAdapter = new TabsPagerAdapter(this);
 
        viewPager.setAdapter(tabsAdapter);
        actionBar.setHomeButtonEnabled(false);
        actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);        
 
        // Adding Tabs
        for (String tab_name : tabsAdapter.getTabLabels()) {
            actionBar.addTab(actionBar.newTab().setText(tab_name));
                    //.setTabListener(this));
        }
	}

	/*@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		
        // Get the SearchView and set the searchable configuration
        SearchManager searchManager = (SearchManager) getSystemService(Context.SEARCH_SERVICE);
        SearchView searchView = (SearchView) menu.findItem(R.id.action_search).getActionView();
        // Assumes current activity is the searchable activity
        searchView.setSearchableInfo(searchManager.getSearchableInfo(getComponentName()));
        searchView.setIconifiedByDefault(false); // Do not iconify the widget; expand it by default
		return true;
	}*/

	public static class ActionActivity extends PreferenceFragment {

		@Override
		public void onCreate(Bundle savedInstanceState) {
			super.onCreate(savedInstanceState);
			
			// Load preferences from action_prefs.xml
		}
	}
}
